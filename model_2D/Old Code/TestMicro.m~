% function rho = TwoDMicro(rhoIC,x,D,dt,T,N,seedNum)
% 
% Solve the KPP equation as a particle system:
%    dX_t = σdB_t
%  + 'birth process' with intensity 1-ρ.
% 

% function [rho] = KPP_Micro(rhoIC,x,D,dt,T,N,seedNum)
% 
% Solve the KPP equation as a particle system:
%    dX_t = σdB_t
%  + 'birth process' with intensity 1-ρ.
% 
clc; clear all; close all;

    % init
    dx = .1;
    dy = .2;
    x = -4:dx:5;
    y = -4:dy:4;
    T = 2;
    dt = .1;
    D = 1;

    nT = floor(T/dt + .5); 
    N = 100;
    
    xInit = normpdf(x,1,1);
    yInit = normpdf(y,2,2);
    
    [xInit, yInit] = AdjustSize(xInit', yInit');   
    X = interp2(rand(N,2),[xInit ; yInit]);  
    rho(:,:,1) =  hist3(X,[length(x),length(y)]);
    rho(:,:,1) = rho(:,:,1)./(sum(sum(rho(:,:,1))));

    X1 = X(:,1);
    X2 = X(:,2);
    
    for j = 2:nT
        % A) Move
        
        X1 = X1 + sqrt(2*D)*sqrt(dt)*randn(length(X1),1); 
        X2 = X2 + sqrt(2*D)*sqrt(dt)*randn(length(X2),1);     
        [X1, X2] = AdjustSize(X1,X2);
            
        % B) Birth/death
        rho(:,:,j) = hist3([X1 X2],[length(x) length(X2)]);
        rho(:,:,j) = rho(:,:,j)./(sum(sum(rho(:,:,j))));   
        
        rho_at_X = interp2([X1 X2],rho(:,:,j)); % interpolate at x_i, coming from Brownian paths.
        
        %% ∂_t ρ = ρ(1-ρ)
        %% 1) density
         
        oneMrho1 = (1-rho_at_X(:,1));               % 1-M at X(k)       
        oneMrho2 = (1-rho_at_X(:,2));               % 1-M at X(k)
        
        %% 2) rand      
        
        coin_M1 = randn(length(X1),1);
        coin_M2 = randn(length(X2),1);
        
        indexKill1     = logical( (oneMrho1<0).*(coin_M1<dt*abs(oneMrho1)) );
        indexKill2     = logical( (oneMrho2<0).*(coin_M2<dt*abs(oneMrho2)) );
        
        indexDivision1 = logical( (oneMrho1>0).*(coin_M1<dt*abs(oneMrho1)) );
        indexDivision2 = logical( (oneMrho2>0).*(coin_M2<dt*abs(oneMrho2)) );
        
        %% 3) update
        X_new1 = X1(indexDivision1);
        X_new2 = X2(indexDivision2);
        X1(indexKill1) = [];
        X2(indexKill2) = [];
        X1 = [X1; X_new1];
        X2 = [X2; X_new2];
       
        X1(isnan(X1)) = []; %remove NaN values
        X2(isnan(X2)) = []; %remove NaN values
        
       surf(rho(:,:,j)); grid on; colorbar;
       pause(.3);
    end